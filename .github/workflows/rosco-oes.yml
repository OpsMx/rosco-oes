name: Branch Build rosco 1.33.x

on:
  workflow_call:
  push:
    branches:
    - OES-1.33.x
 
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic

jobs:
  build-rosco:
    runs-on: ubuntu-latest
    outputs:
      rosco: ${{ steps.get-build-name.outputs.rosco }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Prepare build variables
        id: build_variables
        run: |
          echo "REPO=ubi8-rosco-cve" >> $GITHUB_OUTPUT
          CUSTOMPLUGIN_RELEASEORG=opsmx
          CUSTOMPLUGIN_RELEASEREPO=armory-observability-plugin
          CUSTOMPLUGIN_RELEASE_ZIP_VERSION=v1.0.1
          CUSTOMPLUGIN_RELEASE_SRC_VERSION=v1.0.6
          echo "CUSTOMPLUGIN_RELEASEORG=$CUSTOMPLUGIN_RELEASEORG" >> $GITHUB_OUTPUT
          echo "CUSTOMPLUGIN_RELEASEREPO=$CUSTOMPLUGIN_RELEASEREPO" >> $GITHUB_OUTPUT
          echo "CUSTOMPLUGIN_RELEASE_ZIP_VERSION=$CUSTOMPLUGIN_RELEASE_ZIP_VERSION" >> $GITHUB_OUTPUT
          echo "CUSTOMPLUGIN_RELEASE_SRC_VERSION=$CUSTOMPLUGIN_RELEASE_SRC_VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=1.33.3" >> $GITHUB_OUTPUT
          echo "GITHASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILDDATE=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_KEY }}

      - name: Build Rosco
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.build_variables.outputs.VERSION }}
        run: |
          sed -e 's|NEXUS_USERNAME|${{ secrets.NEXUS_USERNAME }}|' -i settings.gradle
          sed -e 's|NEXUS_PASSWORD|${{ secrets.NEXUS_PASSWORD }}|' -i settings.gradle
          sed -e 's|NEXUS_USERNAME|${{ secrets.NEXUS_USERNAME }}|' -i build.gradle
          sed -e 's|NEXUS_PASSWORD|${{ secrets.NEXUS_PASSWORD }}|' -i build.gradle
          sed -e 's|NEXUS_URL|${{ secrets.NEXUS_URL }}|' -i settings.gradle
          sed -e 's|NEXUS_URL|${{ secrets.NEXUS_URL }}|' -i build.gradle
            
          ./gradlew --no-daemon -PenableCrossCompilerPlugin=true rosco-web:installDist -x test 

      - name: Docker Build and Push (FIPS)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/ubi8/Dockerfile-fips
          push: true
          platforms: linux/amd64
          build-args: |
            TARGETARCH=amd64
            CUSTOMPLUGIN_RELEASEORG=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASEORG }}
            CUSTOMPLUGIN_RELEASEREPO=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASEREPO }}
            CUSTOMPLUGIN_RELEASE_ZIP_VERSION=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASE_ZIP_VERSION }}
            CUSTOMPLUGIN_RELEASE_SRC_VERSION=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASE_SRC_VERSION}}
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-${{ steps.build_variables.outputs.GITHASH }}-${{ steps.build_variables.outputs.BUILDDATE }}

      - name: Docker Build and Push (Dev)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/ubi8/Dockerfile-dev
          push: false
          platforms: linux/amd64
          build-args: |
            TARGETARCH=amd64
            CUSTOMPLUGIN_RELEASEORG=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASEORG }}
            CUSTOMPLUGIN_RELEASEREPO=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASEREPO }}
            CUSTOMPLUGIN_RELEASE_ZIP_VERSION=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASE_ZIP_VERSION }}
            CUSTOMPLUGIN_RELEASE_SRC_VERSION=${{ steps.build_variables.outputs.CUSTOMPLUGIN_RELEASE_SRC_VERSION}}
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-${{ steps.build_variables.outputs.GITHASH }}-${{ steps.build_variables.outputs.BUILDDATE }}-dev

      - id: get-build-name
        run: |
          imageName="${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-${{ steps.build_variables.outputs.GITHASH }}-${{ steps.build_variables.outputs.BUILDDATE }}"
          echo "rosco=$imageName" >> $GITHUB_OUTPUT

  update-settings:
    runs-on: ubuntu-latest
    needs: [build-rosco]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get Rosco image 
        run: |
          echo "ImageName : ${{ needs.build-rosco.outputs.rosco }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}   
