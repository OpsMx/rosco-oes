#FROM ubuntu:bionic AS build
#RUN apt-get update && apt-get install -y \
#   openjdk-17-jdk \
# && rm -rf /var/lib/apt/lists/*
#LABEL maintainer="sig-platform@spinnaker.io"
#ENV GRADLE_USER_HOME /workspace/.gradle
#ENV GRADLE_OPTS -Xmx6g
#WORKDIR /build
#COPY . /build
#RUN ./gradlew --no-daemon rosco-web:installDist -x test

#FROM alpine:3 AS build
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.7 AS build

ARG JAVA_PACKAGE=java-17-openjdk-headless
ENV JAVA_HOME /usr/lib/jvm/jre-17


#RUN apk add --update \
#    java-17-openjdk-headless \
#    && rm -rf /var/cache/apk
RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \
    && microdnf update \
    && microdnf clean all 

LABEL maintainer="sig-platform@spinnaker.io"
ENV GRADLE_USER_HOME /workspace/.gradle
ENV GRADLE_OPTS -Xmx4g
WORKDIR /build
COPY . /build
#RUN ./gradlew --no-daemon rosco-web:installDist -x test
RUN ./gradlew --no-daemon rosco-web -x test


#FROM alpine:3.16 AS package
FROM sheetalatre/ubi8.7-javabase:v1 AS package
LABEL maintainer="sig-platform@spinnaker.io"

ENV KUSTOMIZE_VERSION=3.8.6
ENV KUSTOMIZE4_VERSION=4.5.5
ENV PACKER_VERSION=1.8.1
ENV TARGETARCH=amd64


#ARG TARGETARCH

WORKDIR /packer

ENV PATH "/packer:$PATH"

#RUN  microdnf install bash wget git tar openssh-clients java-17-openjdk-headless

RUN  microdnf install --setopt=tsflags=nodocs bash wget curl tar unzip openssl openssh-clients && \
  wget https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_${TARGETARCH}.zip && \
  unzip packer_${PACKER_VERSION}_linux_${TARGETARCH}.zip && \
  rm packer_${PACKER_VERSION}_linux_${TARGETARCH}.zip

ENV PATH "/packer:$PATH"

# Install Helm 3
RUN wget https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get-helm-3 && \
  chmod +x get-helm-3 && \
  ./get-helm-3 && \
  rm get-helm-3 && \
  mv /usr/local/bin/helm /usr/local/bin/helm3

# Install Helm 2
RUN wget https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get && \
  chmod +x get && \
  ./get --version v2.17.0 && \
  rm get

RUN mkdir kustomize && \
  curl -s -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_${TARGETARCH}.tar.gz|\
  tar xvz -C kustomize/ && \
  mv ./kustomize/kustomize /usr/local/bin/kustomize && \
  rm -rf ./kustomize

RUN mkdir kustomize && \
  curl -s -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE4_VERSION}/kustomize_v${KUSTOMIZE4_VERSION}_linux_${TARGETARCH}.tar.gz|\
  tar xvz -C kustomize/ && \
  mv ./kustomize/kustomize /usr/local/bin/kustomize4 && \
  rm -rf ./kustomize

RUN  microdnf install --setopt=tsflags=nodocs openssh-clients && \
  groupadd -g 10111 spinnaker && \
  useradd -g spinnaker -u 10111 spinnaker && \
  mkdir -p /opt/rosco/plugins && chown -R spinnaker:spinnaker /opt/rosco/plugins


#RUN addgroup -S -g 10111 spinnaker
#RUN adduser -S -G spinnaker -u 10111 spinnaker
COPY --from=build rosco-web/build/install/rosco /opt/rosco
COPY --from=build rosco-web/config              /opt/rosco
COPY --from=build halconfig/packer              /opt/rosco/config/packer
#RUN mkdir -p /opt/rosco/plugins && chown -R spinnaker:nogroup /opt/rosco/plugins
USER spinnaker
CMD ["/opt/rosco/bin/rosco"]

